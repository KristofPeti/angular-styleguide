name: Build & Deploy

on:
  push:
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest

    #define node version
    strategy:
      matrix:
        node-version: [18.x]

    steps:
      - uses: actions/checkout@v3

      # setting up node
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      # caching node_modules
      - name: Cache node modules
        id: cache-nodemodules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          path: node_modules
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      # install
      - name: Install Dependencies
        if: steps.cache-nodemodules.outputs.cache-hit != 'true'
        run: |
          npm ci

      # build
      - name: Build
        run: |
          npm run build

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./dist/angular-redux-shop
          publish_branch: gh-pages
          destination_dir: ./angular-styleguide

      # karma test
      #- name: Karma Test
      #  run: |
      #    npm test

      # start server for testing
      #- name: Start
      #  run: |
      #    npm start

      # wdio test
      #- name: Wdio Test
      #  run: |
      #    npm run e2e:wdio

      # playwright test
      #- name: Playwright Test
      #  run: |
      #    npm run e2e:playwright
